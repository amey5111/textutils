{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","msg","Navbar","mode","href","title","id","about_text","placeholder","onClick","toggleMode","style","color","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","manageAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setalert","message","setTimeout","setMode","body","background","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7b3e8c3a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} fade show`} role=\"alert\">\r\n    <strong>{props.alert.type}</strong> {props.alert.msg}\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.about_text}</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        \r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"form-check form-switch mx-1\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\"style={{color: props.mode==='light'?'black':'white'}} htmlFor=\"flexSwitchCheckDefault\">enable dark mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired , \r\n  about_text: PropTypes.string,\r\n};\r\nNavbar.defaultProps={\r\n    title: \"default title goes here\",\r\n    about_text: \"default about text goes here\"\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" +  text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText) ; \r\n        props.manageAlert(\"converted to lower Case\",\"success\") ; \r\n    }\r\n  const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" +  text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText) ; \r\n        props.manageAlert(\"converted to upper case\",\"success\") ; \r\n    }\r\n  const  handleCopyyClick= ()=>{\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select() ; \r\n        navigator.clipboard.writeText(text.value) ; \r\n        props.manageAlert(\"Text is copied to clipboad\",\"success\")\r\n    }\r\n  const  handleExtraSClick= ()=>{\r\n        let newText = text.split(/[ ]+/) ; \r\n        setText(newText.join(\" \")) ; \r\n        props.manageAlert(\"Exta Spaces are removed\",\"success\") ; \r\n    }\r\n    const handlecClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" +  text);\r\n        let newText = \"\";\r\n        setText(newText) ; \r\n        props.manageAlert(\"text was cleared\",\"success\") ; \r\n    }\r\n  \r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value) ; \r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here2'); \r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n  return (\r\n    <>\r\n    <div> \r\n            <h1 style={{color: props.mode==='light'?'black':'blue'}}>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\"  rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleCopyyClick}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleExtraSClick}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-danger mx-3\" onClick={handlecClick}>clear</button>\r\n            \r\n            \r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h2 style={{color: props.mode==='light'?'black':'blue'}}>Your text summary</h2>\r\n            <p style={{color: props.mode==='light'?'black':'white'}}>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p style={{color: props.mode==='light'?'black':'white'}}>{0.008 *  text.split(\" \").length} Minutes read</p>\r\n            <h2 style={{color: props.mode==='light'?'black':'blue'}}>Preview</h2>\r\n            <p style={{color: props.mode==='light'?'black':'white'}}>{text.length>0?text:\"Enter the text in above given text box to preview it \"}</p>\r\n            <ul>\r\n              <li className='my-3'>\r\n                <h5 style={{color: props.mode==='light'?'black':'blue'}}><u> Bold text will be displayed bellow</u></h5>\r\n                <b style={{color: props.mode==='light'?'black':'white'}}>{text}</b>\r\n              </li>\r\n              <li className='my-3'>\r\n                <h5 style={{color: props.mode==='light'?'black':'blue'}}><u> Italic text will be displayed bellow</u></h5>\r\n                <i style={{color: props.mode==='light'?'black':'white'}}>{text}</i>\r\n              </li>\r\n              <li className='my-3'>\r\n                <h5 style={{color: props.mode==='light'?'black':'blue'}}><u>underlined text will be displayed bellow</u></h5>\r\n                <u style={{color: props.mode==='light'?'black':'white'}}>{text}</u>\r\n              </li>\r\n            </ul>\r\n        </div>\r\n        </>\r\n  )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Link , \n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [alert, setalert] = useState(null);\n  const manageAlert=(message,type) =>{\n    setalert({msg: message ,  \n            type: type\n          }\n          )\n          setTimeout(() => {\n            manageAlert(null)\n          },2500);\n  \n  }\n   const [mode, setMode] = useState('light');\n   const toggleMode = () =>{\n  if(mode==='dark'){\n    setMode('light') ; \n    document.body.style.background = 'white' ; \n    document.getElementById(\"myBox\").style.backgroundColor = \"white\" ; \n    document.getElementById(\"myBox\").style.color = \"black\" ; \n    manageAlert(\"light mode is enabled\",\"success\") ; \n    document.title = \"textutils | light mode\" ; \n  }\n\n  else{\n    setMode('dark') ; \n    document.body.style.background = 'black' ; \n    document.getElementById(\"myBox\").style.backgroundColor = \"#001a33\" ; \n    document.getElementById(\"myBox\").style.color = \"white\" ; \n    manageAlert(\"Dark mode is enabled\",\"success\") ; \n    document.title = \"textutils | dark mode\" ; \n\n  }\n}\n  return (\n    \n    <>\n    {/* <Router> */}\n    <Navbar title=\"textUtilS\" about_text=\"About\" mode={mode} toggleMode = {toggleMode}/>\n    <Alert alert={alert}/>\n    \n    <div className=\"container\" my-3>\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm heading=\"Enter text to analyze bellow\" manageAlert={manageAlert} mode={mode}/>\n          {/* </Route>\n    </Switch> */}\n    </div>\n        {/* </Router> */}\n    </>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}